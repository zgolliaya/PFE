pipeline {
    properties([
            parameters([
                    choice(choices: ['test','staging'], description: 'Environment to run the tests against', name: 'environment'),
                    string(name: 'INCLUDE', defaultValue: 'login', description: 'Specify which tags you want to run (e.g. valid_login)'),
                    string(name: 'EXCLUDE', description: 'Specify if you want to exclude tests by category tags'),
                    string(name: 'FOLDER', defaultValue: 'test1', description: 'Specify the folder for tests (e.g. . for current dir'),
                    string(name: 'BRANCH', defaultValue: 'B2B', description: 'Specify the branch for tests (e.g. main')
    ])

    // -- Script arguments --------------------------------
    def include = "${params.INCLUDE}"
    def exclude = "${params.EXCLUDE}"
    def folder = "${params.FOLDER}"
    def branch = "${params.BRANCH}"
    def args = ""
    // ----------------------------------------------------

    agent { label 'robot'} // how is your Jenkins agent labeled, so that right kind of agent is used for execution

    stages {
        stage('Checkout') {
            steps {
                script {
                    // checkout your code here 
                }
            }
        }
        stage('Define args') {
            steps {
                script {
                    if (!include.isEmpty()) {
                        args += " -i $include"
                    }
                    if (!exclude.isEmpty()) {
                        args += " -e $exclude"
                    }
                    if (!folder.isEmpty()) {
                        args += " $folder"
                    } else {
                        args += " ."
                    }
                }
            }
        }
        stage('Run Robot tests') {
            steps {
                sh """
                    // command to run your tests
                """
            }
            post {
                always {
                    step([
                            $class              : 'RobotPublisher',
                            outputPath          : 'test_results',
                            outputFileName      : "output.xml",
                            reportFileName      : 'report.html',
                            logFileName         : 'log.html',
                            disableArchiveOutput: false,
                            passThreshold       : 95.0,
                            unstableThreshold   : 95.0,
                            otherFiles          : "**/*.png",
                    ])
                }
            }